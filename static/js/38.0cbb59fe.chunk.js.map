{"version":3,"file":"static/js/38.0cbb59fe.chunk.js","mappings":"+MACA,EAA6B,gCAA7B,EAAoE,0BAApE,EAAsG,2BAAtG,EAAyI,2BAAzI,EAA6K,4B,2BCMvKA,GAAkBC,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IAmC7B,MAjCA,WACE,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCC,EAAAA,EAAAA,KAA9BC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,aAEfC,EAAQL,EAAaM,IAAI,SAc/B,OAZAC,EAAAA,EAAAA,YAAU,WACJF,IACFP,EAAeO,GACfF,EAAYE,GAEf,GAAE,CAACL,EAAcK,EAAOF,KAQvB,iBAAKK,UAAWC,EAAhB,WACE,kBAAMD,UAAYC,EAAaC,SAPnC,SAAsBC,GACpBA,EAAEC,iBACFX,EAAgB,CAAEI,MAAOR,GAC1B,EAIG,WACE,kBAAOgB,QAAQ,SAASL,UAAWC,EAAnC,2BACA,kBAAOK,GAAG,SAASN,UAAWC,EAAcM,KAAK,OAAOC,MAAOnB,EAAaoB,SAAU,SAAAN,GAAC,OAAIb,EAAea,EAAEO,OAAOF,MAA5B,KACvF,mBAAQD,KAAK,SAASP,UAAWC,EAAjC,wBAEF,SAAC,EAAAU,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,SACGhB,GAASD,EAAakB,OAAS,IAAK,SAAC5B,EAAD,QAI5C,E,SC5BD,MATA,WACE,OACE,4BACE,SAAC,EAAD,KACA,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/MovieSearch/MovieSearch.module.css?a4c9","components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchPage\":\"MovieSearch_searchPage__2oU85\",\"form\":\"MovieSearch_form__dggG5\",\"label\":\"MovieSearch_label__cGH05\",\"input\":\"MovieSearch_input__ixDAZ\",\"button\":\"MovieSearch_button__LdFnP\"};","import { Suspense, lazy, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport styles from './MovieSearch.module.css'\nimport { useMovies } from 'contexts/MoviesContext';\nimport Spinner from 'UI/Spinner/Spinner';\n\nconst MovieSearchList = lazy(() => import(\"./MovieSearchList/MovieSearchList\"));\n\nfunction MovieSearch() {\n  const [searchValue, setSearchValue] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { searchMovie, searchMovies } = useMovies();\n\n  const query = searchParams.get('query');\n\n  useEffect(function () {\n    if (query) {\n      setSearchValue(query)\n      searchMovie(query);\n    }\n  }, [searchParams, query, searchMovie])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    setSearchParams({ query: searchValue })\n  }\n\n  return (\n    <div className={styles.searchPage}>\n      <form className={ styles.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"search\" className={styles.label}>Search movie</label>\n        <input id=\"search\" className={styles.input} type=\"text\" value={searchValue} onChange={e => setSearchValue(e.target.value)}/>\n        <button type=\"submit\" className={styles.button}>Search</button>\n      </form>\n      <Suspense fallback={<Spinner/>}>\n        {query && searchMovies.length > 0 && <MovieSearchList />}\n      </Suspense>\n    </div>    \n  )\n}\n\nexport default MovieSearch\n","import MovieSearch from 'components/MovieSearch/MovieSearch';\nimport { Outlet } from 'react-router-dom';\n\nfunction Movies() {\n  return (\n    <div>\n      <MovieSearch />\n      <Outlet />\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["MovieSearchList","lazy","useState","searchValue","setSearchValue","useSearchParams","searchParams","setSearchParams","useMovies","searchMovie","searchMovies","query","get","useEffect","className","styles","onSubmit","e","preventDefault","htmlFor","id","type","value","onChange","target","Suspense","fallback","Spinner","length"],"sourceRoot":""}